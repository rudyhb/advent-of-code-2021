use std::str::FromStr;

pub(crate) fn run() {
    let _input

#..#.
#....
##..#
..#..
..###";
    // let _input = _get_input();

    let mut lines = _input.split('\n');

    let algo: ImageEnhancingAlgorithm = lines.next().unwrap().parse().unwrap();

    lines.next();
    let mut image: Image = Image::from_iter(lines);

    println!();
    println!("original:");
    image.print();
    println!("lit pixels: {:?}", image.lit_pixel_count());

    for i in 1..=50 {
        image.enhance(&algo);
        println!();
        println!("enhance {}:", i);
        image.print();
        println!("lit pixels: {:?}", image.lit_pixel_count());
    }
}

struct ImageEnhancingAlgorithm([bool; 512]);

impl FromStr for ImageEnhancingAlgorithm {
    type Err = ();

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        let mut algo = [false; 512];
        for i in s.chars().enumerate().filter(|(_, c)| *c == '#').map(|(i, _)| i) {
            algo[i] = true;
        }
        Ok(Self(algo))
    }
}

struct Image(Vec<Vec<bool>>, bool);

impl Image {
    pub fn print(&self) {
        for line in self.0.iter() {
            println!("{}", line.iter().map(|&c| if c { '#' } else { '.' }).collect::<String>())
        }
    }
    fn get_neighbors<'a>(&'a self, i: isize, j: isize) -> impl Iterator<Item=bool> + 'a {
        (j - 1..=j + 1)
            .into_iter().flat_map(move |j| (i - 1..=i + 1).into_iter().map(move |i| (i, j)))
            .map(|(i, j)| {
                if i < 0 || j < 0 {
                    return self.1;
                }
                let i = i as usize;
                let j = j as usize;
                if j >= self.0.len() || i >= self.0[j].len() {
                    self.1
                } else {
                    self.0[j][i]
                }
            })
    }
    fn enlarge_image(&self, image: &mut Vec<Vec<bool>>) {
        let default_value = self.1;
        for line in image.iter_mut() {
            line.insert(0, default_value);
            line.push(default_value);
        }
        image.insert(0, vec![default_value; image[0].len()]);
        image.push(vec![default_value; image[0].len()]);
    }
    pub fn enhance(&mut self, algo: &ImageEnhancingAlgorithm) {
        let mut new_image: Vec<Vec<bool>> = self.0.clone();
        self.enlarge_image(&mut new_image);
        for (j, line) in new_image.iter_mut().enumerate() {
            for (i, cell) in line.iter_mut().enumerate() {
                let sum: usize = self.get_neighbors(i as isize - 1, j as isize - 1)
                    .enumerate().filter(|(_, val)| *val)
                    .map(|(index, _)| 2usize.pow(8 - index as u32))
                    .sum();
                *cell = algo.0[sum];
            }
        }
        self.0 = new_image;
        let sum = if self.1 {
            (0..9).map(|index| 2usize.pow(8 - index as u32)).sum()
        } else { 0 };
        self.1 = algo.0[sum];
    }
    pub fn lit_pixel_count(&self) -> Option<usize> {
        if self.1 {
            return None;
        }
        Some(self.0.iter().flat_map(|row| row.iter()).filter(|&&c| c).count())
    }
}

impl<'a> FromIterator<&'a str> for Image {
    fn from_iter<T: IntoIterator<Item=&'a str>>(iter: T) -> Self {
        let mut image: Vec<Vec<bool>> = Default::default();
        for line in iter {
            let mut row: Vec<bool> = Vec::with_capacity(line.len());
            for c in line.chars() {
                row.push(match c {
                    '#' => true,
                    '.' => false,
                    _ => panic!("invalid image")
                })
            }
            image.push(row)
        }
        Self(image, false)
    }
}

fn _get_input() -> &'static str {


#.#....#...#..#.....###.....#...##.#####.#.#.##.#.###.###.##.##.........########......##...#....##..
..#.#..#...#.###...#..#..#.....###.#.#.##.#.##.#..###.###.#..#.##.#.##.#.#.#...####.#.......#..##...
##..##...#.#########.###..#####..###.###.####....###.#.#.###.#.#..#..#.#...####..###.#.##.#####.##..
.#.##....##..#.###..#....#.#..##..####.#..#.#####.#.#...#.....#.##.#.#.#...#..#......#.#.#.##..#.#.#
##..#.##.#.#.#.##....####.#.#.....#.....#....#....#...###..###..######.#...#.#.....#.#.##...##..##..
###..#......##.....#..##.#.#...#...#.##..##..###.####...###.#...##.#.#.#.##.#....###...######...#.##
...##.#..#.#.#.####.####..#.#.#.##.#...#.....#.#..#.#####..###.#...#..#...####...#....##..##..#....#
.#.#.....##...#.##..#.##..##.#######.##..#...#..#.######.#.##..#..#......###.#..##.#.#...###.##..#..
.##.#######.##..#...#..###.###...##.##..#.#...#..#.#..###.##.#..#.##.#.#.##.####..#..###.###.##.#.#.
#..###...#.####.#...##.###...##..#.######..#.#........##.#...#..#.##.#....#####...#..#.#.##.#....###
#..####.#.#.##..#.#.##...#...###....#...#.....###..##...##.#.##.#....##..##.##.#####.#.#.##.###..##.
####.####..#.#..###.#..#####......#...####.##.#..##.##..#...#..#.#####...#...#...###.##.##........##
#.....###..#.###.#...##.#####...###...###.#.##.###.###.##.####..#..#.....#...##.#.....#.##..#..#....
.##..#.######..#.#.#.....#.#..###.#.####.##.#...##..#..#.#.##..#.....#.####.#.#.#...##.##..#......##
#.##...###.##.##.#...####.#..#...#.#..#.###.#.#.##.##..###.##.##.#..##..#.#.#.#..#.###.#...###..#.##
###...#.#.##.#.#.#.##.#.###.##..#.#.##..#.##..####.##..#...##.#.###....###..###..###.#..#.##..#.#.##
.......###...#####.#####.#.####..#....##.##.###.#.#.#.#.#...#.#.###.####.#..###.####.#.#..#..#######
#.#........###..###..#...####..##.#..####....#.#...##.#....#..###..##......#..###....###.#.###...#.#
...#.#....#...##..###.##.####.....####.........#..#..#.#.#.###.#..##.####........###.###.#..#.#...#.
##.######...###.....#.##..#..##..#.#.#..#...#.#...##.#.##...######.#.#...###..#.########.#.##.###...
##..#..#..#.##...#.##.........##..#####.#.##.#.####...#.#.#...#...##.####..#...######..#.....##..#..
...#..#.###..#.##.###...#....#..#...#.###..####.#..######.##..#....##...####...##..#.#.#.###.###....
.##.###..####.##....#....######...#..####.##...###.##.#.#.##..##.....####.#..#.###.##...#....####.##
####.######.#..#...###.#.#.#.....####....#.#..#....##...##.#######.#..#..#.######.##......#...##...#
.#####..#..##...###.###.#.#....###.###.##...#.#...#..#..#..#.........#.##..#.....#....####..####.###
#..##.#.###.#......##...#.###..##.##.#.#..#.#.##..###.#..........#..#...#.###.###..###.#.#..#..#....
......#.####..#.####..#....##..####.##..#....##.#.#........#.#####..###....###..###.#..#.#.#.#.##.##
#..#.....####.#.##.#..#..#...#.#..##..##.#.#.####..#...#..#.#.#.#....#.###.###..##.#.#...###.###.#..
.##..#..####.##.#...####...#.#.#.#.#.#..#.#...##..#....#.#..#..#.#.##..#.#..##..#.#.#...##..###.##..
..#.#..#.....##.###.##.#####.......###..##.##..#..###..##..#.....##.#.#.....##.#########.####.#.####
##....####..#....#.########...##.###....#......#..###..###.#.####.##.#######.#############...#.##.#.
##..##....#..#..#...#.#.#.##..##..#.###....##..#..##.#.#...#.....#....#..#....#.###.#...#...#.##..##
##.#..##..#..###.##.....#..#.##...##....#.#..##.#.....#.#...##......##########.....#....#.####......
.###.#....##..#..##..#####.###.#.##.#.####..###.#.###..#.##....####..#.#...#.#.#..#####...####.##..#
....#..####..#.......#.#.......##...##.#.###..##.........##..##...##.#..###..#.#....#.####.#...#.###
#.#.#.####.#.#.#.#....##.#...#..##.#.##..##.#.##..#.#..#.#.#..#####..###.#..#..#.#..##.#...#..#..#.#
.#..##....##.#...#.......###.#####.#........#.###.###.###..##.###...#.#....#...####.###.##..###.##..
.#.##.##.#.#..####.#..##.###..##..##.##.#.#####..#..#.#..#.##.#.####.#.##.#...##....#.....#.####.##.
##.##.#.#########.#....##.##.#####....#..#..###.#..##.#..##.#.#.#######.##.#......##.##..#.####...#.
#.....#.##...##...##.#.#...###.#####.#.##.####.##.#..#..##.#####.##..###.......#.#...##...#..###.#.#
.#.#####.##.##.#.#..##...#..#.#####...#.##.####.##.#.#.##.#.##.#..#....#.....###..##.##.##.#.#.#.###
##.##.#.#.#..#..#..##.#####.#...##.#...##..#.#..#..#.#...#.###..###.#...#..##...###.......#...#.#.#.
.#.....#..##......#.#..###.#..#.##..##.#.....##.##...#....#.##.#......#.#..#..###..#.#..####.##..###
...###.....#.##..####.##.#.#...#.......##..###.###..##.#.#....#...#.#..#.###.####..###...#....#...#.
..#.....#...###.##.##.#....#.##..#.#####..###.####.##..#.##.##.##..#.#.###.#.#.#...##....###.#.##...
.#########...#...##..###.#.###.#...#...#.###.###..###....###..#.##...##.#.#...#.#.####..#..#...#####
##..##..#..#....#....#####....###...#.##.###.#.#.#.....#..##..###.#.#..##.#.#..##....#.###.##..#..##
.....#.##...##......#..#.####....#.##.#####...#..#..#.###..####..#.####.##..#.####.#.#.....###..#..#
###....##.#..##....#####..#.#####.####....#....##.......#####.#...#.....#..#.###...##.#..#.###..#.##
#.##..#...##...##.#.###.###.#.#...#...#..#####.#..#.###.#.##.###.####...#.#.##..##.#.######.###..#..
.#.####...##.###.#.....#.##########.###.#####...###.#...###.#....#..##..##....##.##....#.##...#.##.#
###..#.#######.##.#####..######......#.#..#.#..#....######.##.###.###.#.##.#.##..#..##..###..##..###
....###.######.###.....##...#..#...##..###..########.#.##...####....##.###.#.##..##.#.....##.#.###..
#...#....#..##.#.#.#..#..#.#...#.#..#.###.######.##.####....#.##....##.###.##.##.......#.##..#.##...
###.#.#.#...#.#.#.#.#..#.####..##..##.##..##.#.##..##.###.####.#####..#.####...##.....#.#.##...#.##.
###.....#####.#...#.#....##...#..####...##.##.#..#.....#.##.#....######.##.##..#.#..#####.#...##...#
.#..##.###.###..#######.#.#.###...##.###.#.#.###.#.#####.##......#.##.....#..####.#.##.##.....#..###
##....##.#.##.#..#.##.###.##.####..#.##...#.#.##..##.#.#...##.#.#.##....#.#.#.....##....######.#.#.#
...#.##.#.#.#....#.###.#.###...##....#..#..##...#.##.#.....##.#.###...###...#.#...###.#.##.##..##.##
.#.#..#..#....##....#######..#...##.##.....#..###.##.#..#....#..##.##.#...#####.#....##....######.##
#.#.##..##..###.....#.##.##.###...###.##.#.#...#....####.......#....#..##.##...##....#...#.####..###
.#.##..#.....######.##..##.###....#####..#...#.####..##..#.#.###...####....#.##....###.##..######...
..###.######..###.....#...#.#..##....##..#...######.#.#.#...###.##....#.#..####.#######..##.....#..#
#...#.#####...#.###..#....#.#....#..#...##.#...#.#..#.##..##..#..##..#.#.###.#.#.##.#.##.......#####
###..#.##.#.#.#.....##.##.###..####....##..#..#..#.###..##.....#.....######.....#.###.#####.##.#####
.##..#.#.###.##.#.#.#..#......##...#..##.###..#.###.#.#.#...##.###...#.....#.##.#.#..##.##.#....##..
##.#..#.#####.##..#.#.##.###....###.......###......#..#...###.##.#.##########.##.##.##.###.#.##.....
.###.#..#####..##..#.####..#.#..######....####.###..#.##.####..#..#...##.#.#.####.####.#.##..####...
###.###.#.#.#..##..###..#....##.#..##.###.##.#.#......###....####.#......#.#.#...#.....##......####.
###.#.####.######..###..##.#.#....#####.#..#....#.##.##..#####.#......#...##....#..#.#.##..####.####
#..#...####..####.####.#..#.##..#.#.#.####..#.####...##....#..####.#.#........#.##......#.....##.#.#
..#..#.#####.#...#.###..##.#..#..#..#...#...#...###.#####.#.##..#.######...##.###....#######....#.##
.#.#........#.##.#.######.###.######..#..##.##.#...#.###.#..####.#.##.######.###..###..........#..##
..###.#.#..#.####...#.##...#....##############.#.#..####.###.#..##...#####.#.##.#..#####.#..#...###.
.#####.######.##...#.#.#..###.##..###.#.##.##....####..#.###...#.#.#...#..#..#.#..##......#..##.#...
.#.#..####.#.###.##..#.#.#.##..##.#..#.########..#..###...##....###.##.#...#.#.#.##.#..#.#..#..#..#.
.##...#.#.#####......##.####.####...#.#######..#..#...#..#####.#.........#####..#.###.#.#.##...##..#
#..#.#..#.#..##.#.##.###.#..##.#..#..####.###.##.########.#.##..#.....#..#....#.##..#..######..#####
.#.#...####..##..####....#.#.###.#.#...##.#.#..####.######..#.#.#.#...#..##...#....#####....####.##.
###...#.#..##..#.#..###.###...##.#..#.###..#.###..#.#...#.#..#.#..##...##..###.#.#....####..#....#.#
##....#.###.####..#.###.#..#######.###.....###...#.##....######.#.##..#####...###..#....##...#..###.
###....####......####.##.#..#...###.##..#...##..#.##..####..###.###..#..#..###..#.###...#.####..#..#
#...#...##..#...###...#..#####...#####.##...#..#.#####.....#####.......##..####....##.....##..#..##.
####..####.##..#.#..#####...#.#..##.#..##.###..#..###..#.....##.##..#..#.####.#..#..###.##..##..##..
####..#......##.#.#.#....#..###..####.##..##.###.##.....#......#.###...#...###.#..#..#.###.##.###...
..##.####..#..........###.#..##.####..#..##.##..##.####.#.##.####.....#.#.#..####.#####.##...#..####
..#....#..#.....#.##.#####.####...##.#.#.##..###..#.######.#.....##.######..#..#.##.##.#...#####.###
........#.#.....#.#.###...#######.#........#.#####.#.####...##.#.##..###...#......#.##.#.#.#..###.##
....#..##.#..#.###.....#...#..###.####.###.##..##...#.#..#....#.#.###.##.#..#...##.##..##..####..#.#
.#.#.##...#...#...#.#.#.####.####.#...#.#....#....##..#......#.#####.#.##.##.##.###...#.#####...#..#
###..##....#......########.##.##.##.##.#....####.###..#..##.##...#..##.#...##..##.####.####.##.#..##
#......###.###.##.....#.........#....###.#...##.###......##.#.....##..###.....##.##.###....##.#.#..#
.##.#.#.##.....#..#.#....#####.#.#...#.##..###.#####.###..###.##.....#.#...#..###..##..#...#.#..##..
########.#.#.##.#.##..#..#.#.#..#.###.#.##.######..#.####...##.##....###..#....#...#..#.#...##...#..
#....#.#####.#....######...##.#.###.#..####.##.###.###...####..#.#.##...#...##...##....####.#.......
..###..#..####.##.#.#####...###.#...###...#.#..##..##...##.##.#.##.#.#...##.....#..#.#.######.####.#
#..###.#..#.#..#.#.....##.#.#.#.#....#.#..#..#.###.#.##...#...##..###.#...#...#######..####..#.....#
#..####.#####....####.#.#.#.#.##.#.#...#####...##.###..###.#.#............###.####..##..##.###..###.
...#..#..#...#.#######.#.##..##..#..#.#..###.###..#.#####....#..#...####.#..##..###.##..######.##.##
##.#..#....#.#..###...#.#########.#####..#...#.####..#.#..#######.#....#.#.#.#..###.#.#..#...#.####."
}